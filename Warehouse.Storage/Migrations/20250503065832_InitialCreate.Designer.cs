// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Warehouse.Storage;

#nullable disable

namespace Warehouse.Storage.Migrations
{
    [DbContext(typeof(WearhouseDbContext))]
    [Migration("20250503065832_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Warehouse.Storage.Entities.Item", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ArrivedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("WearhouseId")
                        .HasColumnType("uuid");

                    b.HasKey("ItemId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("WearhouseId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Warehouse.Storage.Entities.Person", b =>
                {
                    b.Property<Guid>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Warehouse.Storage.Entities.Wearhouse", b =>
                {
                    b.Property<Guid>("WearhouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<int>("StorageVolume")
                        .HasColumnType("integer");

                    b.HasKey("WearhouseId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Wearhouses");
                });

            modelBuilder.Entity("Warehouse.Storage.Entities.Item", b =>
                {
                    b.HasOne("Warehouse.Storage.Entities.Person", "Owner")
                        .WithMany("Items")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Warehouse.Storage.Entities.Wearhouse", "Wearhouse")
                        .WithMany("Items")
                        .HasForeignKey("WearhouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Wearhouse");
                });

            modelBuilder.Entity("Warehouse.Storage.Entities.Wearhouse", b =>
                {
                    b.HasOne("Warehouse.Storage.Entities.Person", "Owner")
                        .WithMany("Wearhouses")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Warehouse.Storage.Entities.Person", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Wearhouses");
                });

            modelBuilder.Entity("Warehouse.Storage.Entities.Wearhouse", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
